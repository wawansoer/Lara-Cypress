services:
    db:
        image: postgis/postgis:16-3.4-alpine
        restart: unless-stopped
        container_name: bh-db
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - 5432:5432
        volumes:
            - db_data:/var/lib/postgresql/data
        networks:
            - bh-db-network
        healthcheck:
            test: pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}
            interval: 5s
            timeout: 10s
            retries: 20

    app: &app
        build:
            context: ./
            dockerfile: docker/Dockerfile
        user: ${UID}:${GID}
        restart: unless-stopped
        container_name: bh-app
        environment:
            COMMAND: php artisan octane:start --watch --host=0.0.0.0 --port=8000
            PROCESS: app
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            - ./:/var/www
            - bh_app_composer_data:/.composer
            - bh_app_npm_data:/.npm
        networks:
            - bh-db-network
            - bh-webserver-network
            - bh-redis-network
        healthcheck:
            test: curl -s http://localhost:8000/up >/dev/null || exit 1
            interval: 5s
            timeout: 10s
            retries: 20

    horizon:
        <<: *app
        container_name: bh-horizon
        environment:
            COMMAND: php artisan horizon
            PROCESS: horizon
        networks:
            - bh-db-network
            - bh-redis-network
        healthcheck:
            test: php artisan horizon:status | grep -q 'is running' # TODO try spatie LARAVEL-HEALTH
            interval: 5s
            timeout: 10s
            retries: 20

    schedule:
        <<: *app
        container_name: bh-schedule
        environment:
            COMMAND: supercronic -quiet /var/www/docker/php/schedule/crontab
            PROCESS: schedule
        networks:
            - bh-db-network
            - bh-redis-network
        healthcheck:
            test: supercronic -test /var/www/docker/php/schedule/crontab | grep -q 'is valid' # TODO try spatie LARAVEL-HEALTH
            interval: 5s
            timeout: 10s
            retries: 2

    redis:
        image: redis:7.2.4-alpine
        restart: unless-stopped
        container_name: bh-redis
        command:
            - "redis-server"
            - "--requirepass ${REDIS_PASSWORD}"
        volumes:
            - redis_data:/data
        networks:
            - bh-redis-network
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 10s
            retries: 20

volumes:
    db_data:
        driver: local
        name: bh_db_data
    redis_data:
        driver: local
        name: bh_redis_data
    bh_app_composer_data:
        driver: local
        name: bh_app_composer_data
    bh_app_npm_data:
        driver: local
        name: bh_app_composer_data
